{
  "version": 1,
  "minor_version": 1,
  "key": "lovelace",
  "data": {
    "config": {
      "title": "Home",
      "button_card_templates": {
        "sensor_card": {
          "show_state": true,
          "show_name": true,
          "show_icon": true,
          "tap_action": {
            "action": "more-info"
          },
          "styles": {
            "card": [
              {
                "padding": "6px"
              },
              {
                "font-size": "16px"
              },
              {
                "color": "white"
              }
            ]
          }
        }
      },
      "views": [
        {
          "title": "Summary",
          "path": "summary",
          "cards": [
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7><font size=\"4\">Batt-001</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jk_bms_001_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "Batt-001 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jk_bms_jk_bms_001_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_charging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_001_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_discharging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_001_balancer') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_balancer') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_balancer') | upper }}</font> {% endif %} "
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7><font size=\"4\">Batt-002</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jk_bms_jk_bms_002_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "Batt-002 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jk_bms_jk_bms_002_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_charging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_002_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_discharging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_002_balancer') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_balancer') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_balancer') | upper }}</font> {% endif %} "
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7><font size=\"4\">3D Printer Environmentals</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "custom:button-card",
                      "entity": "sensor.ikea_of_sweden_vindstyrka_temperature",
                      "name": "Temperature",
                      "template": "sensor_card",
                      "state": [
                        {
                          "value": 0,
                          "operator": "<=",
                          "color": "blue"
                        },
                        {
                          "value": 20,
                          "operator": "<=",
                          "color": "green"
                        },
                        {
                          "value": 80,
                          "operator": "<=",
                          "color": "yellow"
                        },
                        {
                          "operator": ">",
                          "value": 80,
                          "color": "red"
                        }
                      ]
                    },
                    {
                      "type": "custom:button-card",
                      "entity": "sensor.ikea_of_sweden_vindstyrka_humidity",
                      "name": "Humidity",
                      "template": "sensor_card",
                      "state": [
                        {
                          "value": 50,
                          "operator": "<=",
                          "color": "green"
                        },
                        {
                          "value": 60,
                          "operator": "<=",
                          "color": "yellow"
                        },
                        {
                          "operator": ">",
                          "value": 60,
                          "color": "red"
                        }
                      ]
                    },
                    {
                      "type": "custom:button-card",
                      "entity": "sensor.ikea_of_sweden_vindstyrka_pm2_5",
                      "name": "PM2.5",
                      "template": "sensor_card",
                      "state": [
                        {
                          "value": 30,
                          "operator": "<=",
                          "color": "green"
                        },
                        {
                          "value": 120,
                          "operator": "<=",
                          "color": "yellow"
                        },
                        {
                          "operator": ">",
                          "value": 120,
                          "color": "red"
                        }
                      ]
                    },
                    {
                      "type": "custom:button-card",
                      "entity": "sensor.ikea_of_sweden_vindstyrka_voc_index",
                      "name": "VOC Index",
                      "template": "sensor_card",
                      "state": [
                        {
                          "value": 100,
                          "operator": "<=",
                          "color": "green"
                        },
                        {
                          "value": 200,
                          "operator": "<=",
                          "color": "yellow"
                        },
                        {
                          "operator": ">",
                          "value": 200,
                          "color": "red"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.mppt001_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.mppt001_operation_mode",
                  "name": "Operation Mode"
                },
                {
                  "entity": "sensor.mppt001_power",
                  "name": "Power"
                },
                {
                  "entity": "sensor.mppt001_voltage",
                  "name": "Voltage"
                },
                {
                  "entity": "sensor.mppt001_yield_today",
                  "name": "Yield Today"
                }
              ],
              "title": "MPPT001"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_auxilliary_input_mode",
                  "name": "Auxilliary Input Mode"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_battery",
                  "name": "Battery"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_time_remaining",
                  "name": "Time remaining"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_voltage",
                  "name": "Voltage"
                }
              ],
              "title": "SmartShunt 300A"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "event.front_door_ding",
                  "name": "Ding"
                },
                {
                  "entity": "event.front_door_motion",
                  "name": "Motion"
                },
                {
                  "entity": "camera.front_door_last_recording",
                  "name": "Last Recording",
                  "icon": "mdi:video",
                  "secondary_info": "none"
                },
                {
                  "entity": "sensor.front_door_battery",
                  "name": "Battery"
                }
              ],
              "title": "Front Door"
            },
            {
              "type": "custom:weather-card",
              "entity": "weather.forecast_home",
              "hourly_forecast": true
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "custom:button-card",
                  "color_type": "label-card",
                  "color": "rgb(44, 109, 214)",
                  "name": "Mailbox"
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "type": "custom:button-card",
                      "aspect_ratio": "1.2/1",
                      "color_type": "icon",
                      "entity": "input_boolean.mail_delivered",
                      "name": "No Mail",
                      "state": [
                        {
                          "value": "off",
                          "color": "rgb(128,128,128)",
                          "icon": "mdi:mailbox"
                        },
                        {
                          "value": "on",
                          "color": "rgb(255,0,0)",
                          "icon": "mdi:mailbox-up",
                          "name": "Mail!",
                          "styles": {
                            "icon": [
                              {
                                "animation": "blink 2s ease infinite"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:button-card",
                      "aspect_ratio": "1.2/1",
                      "color_type": "icon",
                      "entity": "binary_sensor.mailbox_sensor_status",
                      "name": "Sensor Status",
                      "state": [
                        {
                          "value": "on",
                          "icon": "mdi:server-network",
                          "color": "green",
                          "alias": "Sendor Connected"
                        },
                        {
                          "value": "off",
                          "icon": "mdi:server-network-off",
                          "color": "grey"
                        }
                      ]
                    },
                    {
                      "type": "custom:button-card",
                      "aspect_ratio": "1.2/1",
                      "color_type": "icon",
                      "name": "Battery",
                      "entity": "sensor.mailbox_battery"
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7><font size=\"4\">Speedtest Result</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "gauge",
                      "needle": true,
                      "entity": "sensor.speedtest_download",
                      "name": "Download",
                      "unit": "Mbps",
                      "max": 1000,
                      "min": 0,
                      "severity": {
                        "green": 666,
                        "yellow": 333,
                        "red": 0
                      }
                    },
                    {
                      "type": "gauge",
                      "needle": true,
                      "entity": "sensor.speedtest_upload",
                      "name": "Upload",
                      "unit": "Mbps",
                      "max": 65,
                      "min": 0,
                      "severity": {
                        "green": 40,
                        "yellow": 20,
                        "red": 0
                      }
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52>Ping Rseults: {{ states('sensor.speedtest_ping') }}ms</font></b>"
                    }
                  ]
                }
              ]
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.temperature",
                  "secondary_info": "last-changed",
                  "icon": "mdi:thermometer"
                },
                {
                  "entity": "sensor.barometric_pressure",
                  "icon": "mdi:gauge"
                },
                {
                  "entity": "sensor.relative_humidity",
                  "icon": "mdi:cloud-percent"
                },
                {
                  "entity": "sensor.wind_direction",
                  "icon": "mdi:compass",
                  "secondary_info": "last-changed"
                },
                {
                  "entity": "sensor.wind_speed",
                  "icon": "mdi:weather-windy",
                  "secondary_info": "last-updated"
                },
                {
                  "entity": "sensor.wind_speed_max",
                  "icon": "fas:wind",
                  "secondary_info": "last-updated"
                },
                {
                  "entity": "sensor.rainfall_last_hour",
                  "icon": "fas:cloud-rain",
                  "secondary_info": "last-changed"
                },
                {
                  "entity": "sensor.rainfall_24h",
                  "icon": "fas:cloud-rain",
                  "secondary_info": "last-changed"
                },
                {
                  "entity": "sensor.light_level",
                  "icon": "far:sun",
                  "secondary_info": "last-changed"
                },
                {
                  "entity": "sensor.battery_voltage",
                  "secondary_info": "last-changed",
                  "icon": "mdi:battery-sync"
                },
                {
                  "entity": "sensor.battery_status"
                },
                {
                  "entity": "sensor.solar_voltage",
                  "icon": "mdi:solar-panel",
                  "secondary_info": "last-updated"
                },
                {
                  "entity": "sensor.charge_battery_status",
                  "icon": "mdi:battery-charging"
                },
                {
                  "entity": "sensor.low_battery_status",
                  "icon": "mdi:battery-20"
                },
                {
                  "entity": "sensor.case_temp_fahrenheit"
                }
              ],
              "state_color": true
            }
          ]
        },
        {
          "path": "default_view",
          "title": "Home",
          "cards": [
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "switch.basement_entry",
                  "name": "Entry"
                },
                {
                  "entity": "switch.basement_kitchen",
                  "name": "Kitchen"
                },
                {
                  "entity": "switch.basement_light",
                  "name": "Basement Light"
                },
                {
                  "entity": "switch.basement_hallway",
                  "name": "Hallway"
                },
                {
                  "entity": "switch.laundry_room_light"
                }
              ],
              "title": "Basement",
              "state_color": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "switch.master_bedroom_fan",
                  "name": "Fan"
                },
                {
                  "entity": "switch.master_bedroom_lights",
                  "name": "Lights"
                },
                {
                  "entity": "light.master_tv_light",
                  "name": "TV Light"
                },
                {
                  "entity": "switch.shellyplus1_8813bf9faff8",
                  "name": "Closet Light",
                  "icon": "mdi:hanger",
                  "secondary_info": "none"
                }
              ],
              "title": "Master Bedroom",
              "state_color": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "switch.kitchen_light"
                },
                {
                  "entity": "switch.sink_light"
                },
                {
                  "entity": "switch.cabinet_light"
                },
                {
                  "entity": "switch.island_lights"
                },
                {
                  "entity": "switch.dining_room_lights"
                },
                {
                  "entity": "switch.main_hallway"
                }
              ],
              "title": "Kitchen",
              "state_color": true,
              "show_header_toggle": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "switch.extra_bedroom_light"
                },
                {
                  "entity": "sensor.office1_onair_node_office_1_on_air_node_ip_address_2",
                  "name": "On-Air Office 1 IP"
                },
                {
                  "entity": "sensor.office_2_on_air_node_ip_address_2",
                  "name": "On-Air Offce 2 IP"
                },
                {
                  "entity": "light.wled_eb"
                },
                {
                  "entity": "select.wled_eb_playlist"
                },
                {
                  "entity": "select.wled_eb_preset"
                },
                {
                  "entity": "sensor.wled_eb_ip"
                }
              ],
              "title": "Extra Bedroom",
              "state_color": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.esp32c3_garage_door_garage_temperature",
                  "name": "Garage Temperature:"
                },
                {
                  "entity": "binary_sensor.esp32c3_garage_door_garage_door_is_open",
                  "name": "Garage Door is Open/Closed:"
                },
                {
                  "entity": "binary_sensor.esp32c3_garage_door_garage_door_is_jammed",
                  "name": "Garage Door Is OK/Jammed:"
                },
                {
                  "entity": "cover.esp32c3_garage_door_garage_door",
                  "name": "Open/Close Garage Door:"
                },
                {
                  "entity": "switch.esp32c3_garage_door_virtual_lock",
                  "name": "Virtual Lock:",
                  "icon": "mdi:lock"
                }
              ],
              "title": "Garage Door",
              "state_color": true
            },
            {
              "type": "thermostat",
              "entity": "climate.thermostat",
              "features": [
                {
                  "type": "climate-fan-modes",
                  "style": "dropdown"
                },
                {
                  "type": "climate-hvac-modes"
                },
                {
                  "type": "climate-preset-modes",
                  "style": "dropdown"
                }
              ],
              "show_current_as_primary": true
            },
            {
              "show_state": true,
              "show_name": true,
              "camera_view": "live",
              "fit_mode": "cover",
              "type": "picture-entity",
              "entity": "camera.garage_high_resolution_channel",
              "name": "Garage Camera"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "switch.front_porch"
                },
                {
                  "entity": "switch.outside_garage"
                }
              ],
              "title": "Outside Lights",
              "state_color": true
            },
            {
              "type": "grid",
              "square": false,
              "columns": 1,
              "cards": [
                {
                  "type": "media-control",
                  "entity": "media_player.basement_speaker"
                }
              ]
            },
            {
              "show_name": true,
              "show_icon": true,
              "show_state": true,
              "type": "glance",
              "entities": [
                {
                  "entity": "sensor.epson_wf_4830_series_black_ink",
                  "name": "Black"
                },
                {
                  "entity": "sensor.epson_wf_4830_series_cyan_ink",
                  "name": "Cyan"
                },
                {
                  "entity": "sensor.epson_wf_4830_series_magenta_ink",
                  "name": "Magenta"
                },
                {
                  "entity": "sensor.epson_wf_4830_series_yellow_ink",
                  "name": "Yellow"
                }
              ],
              "title": "Epson WF-4830 Printer Ink Levels",
              "state_color": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "light.waveshare_backlight",
                  "name": "Backlight"
                },
                {
                  "entity": "light.waveshare_moodlight",
                  "name": "Moodlight"
                },
                {
                  "entity": "switch.waveshare_antiburn",
                  "name": "Antiburn"
                },
                {
                  "entity": "number.waveshare_page_number",
                  "name": "Page Number"
                },
                {
                  "entity": "button.waveshare_restart",
                  "name": "Restart"
                },
                {
                  "entity": "sensor.waveshare_battery_percent"
                }
              ],
              "title": "waveshare"
            }
          ]
        },
        {
          "title": "Energy Monitor",
          "path": "energy-monitor",
          "icon": "mdi:power-plug",
          "cards": [
            {
              "type": "gauge",
              "entity": "sensor.energy_meter_energy_meter_total_amps",
              "max": 150,
              "needle": true,
              "severity": {
                "green": 0,
                "yellow": 50,
                "red": 100
              },
              "name": "Total Amps"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.energy_meter_energy_meter_ct1_amps",
                  "name": "Main Phase 1 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct1_watts",
                  "name": "Main Phase 1 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct2_amps",
                  "name": "Main Phase 2 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct2_watts",
                  "name": "Main Phase 2 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct3_amps",
                  "name": "CT3 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct3_watts",
                  "name": "CT3 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct4_amps",
                  "name": "CT4 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct4_watts",
                  "name": "CT4 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct5_amps",
                  "name": "CT5 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct5_watts",
                  "name": "CT5 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct6_amps",
                  "name": "CT6 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct6_watts",
                  "name": "CT6 Watts"
                }
              ],
              "title": "Energy Monitor Main Board"
            },
            {
              "type": "gauge",
              "entity": "sensor.energy_meter_energy_meter_total_watts",
              "needle": true,
              "name": "Total Watts",
              "max": 24000,
              "severity": {
                "green": 0,
                "yellow": 8000,
                "red": 16000
              }
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.energy_meter_energy_meter_ct7_amps",
                  "name": "Secondary Phase 1 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct7_watts",
                  "name": "Secondary Phase 1 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct8_amps",
                  "name": "Secondary Phase 2 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_ct8_watts",
                  "name": "Secondary Phase 2 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_eb_amps",
                  "name": "Extra Bedroom Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_eb_watts",
                  "name": "Extra Bedroom Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_office1_amps",
                  "name": "Office 1 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_office1_watts",
                  "name": "Office 1 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_office2_amps",
                  "name": "Office 2 Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_office2_watts",
                  "name": "Office 2 Watts"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_dishwasher_amps",
                  "name": "Dishwasher Amps"
                },
                {
                  "entity": "sensor.energy_meter_energy_meter_dishwasher_watts",
                  "name": "Dishwasher Watts"
                }
              ],
              "title": "Energy Monitor Add-on Board #1"
            }
          ]
        },
        {
          "title": "BMS",
          "path": "bms",
          "icon": "mdi:battery-charging-wireless",
          "badges": [],
          "cards": [
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7>JK-BMS-01</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jk_bms_001_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "Batt-001 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jk_bms_jk_bms_001_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_charging') | upper }}</font> {% endif %}"
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_001_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_discharging') | upper }}</font> {% endif %}"
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_001_balancer') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_001_balancer') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_001_balancer') | upper }}</font> {% endif %}"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jk_bms_001_total_voltage') | float) }} V</font></b><br> Battery Power:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_001_power') | float) }} W</font><br> Battery Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_001_total_battery_capacity_setting') | float) }} Ah</font><br> Cycle Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_001_total_charging_cycle_capacity') | float) }} Ah</font><br> Ave. Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jk_bms_001_average_cell_voltage') | float) }} V</font><br> Balance Cur.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_001_balancing_current') | float) }} A</font><br> Battery T1:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_001_temperature_sensor_1') | float) }} °F</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jk_bms_001_current') | float) }} A</font></b><br> Remain Battery:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_001_state_of_charge') | float) }} %</font><br> Remain Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_001_capacity_remaining') | float) }} Ah</font><br> Cycle Count:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jk_bms_001_charging_cycles') }}</font><br> Delta Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jk_bms_001_delta_cell_voltage') | float) }} V</font><br> MOS Temp.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_001_power_tube_temperature') | float) }} °F</font><br> Battery T2:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_001_temperature_sensor_2') | float) }} °F</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Cells"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Max: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_001_max_cell_voltage') | float) }} V</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Avg: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_001_average_cell_voltage') | float) }} V</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Min: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_001_min_cell_voltage') | float) }} V</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center> {% for i in range(1, 9) %} {{ '%02d' | format(i) }}.&nbsp;&nbsp;&nbsp; {% set cell_voltage = states('sensor.jk_bms_001_cell_voltage_' ~ i) %} {% if states('sensor.jk_bms_001_max_voltage_cell') == i|string %}\n  <font color=\"#3090C7\">{{ '%.3f' | format(cell_voltage | float) }} V</font>\n{% elif states('sensor.jk_bms_001_min_voltage_cell') == i|string %}\n  <font color=\"red\">{{ '%.3f' | format(cell_voltage | float) }} V</font>\n{% else %}\n  {{ '%.3f' | format(cell_voltage | float) }} V\n{% endif %}<br> {% endfor %}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7>JK-BMS-02</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jk_bms_jk_bms_002_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "Batt-002 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jk_bms_jk_bms_002_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_charging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_002_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_discharging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('switch.jk_bms_jk_bms_002_balancer') == 'on' %} <font color=#41CD52>{{ states('switch.jk_bms_jk_bms_002_balancer') | upper }}</font> {% else %} <font color=red>{{ states('switch.jk_bms_jk_bms_002_balancer') | upper }}</font> {% endif %} "
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_total_voltage') | float) }} V</font></b><br> Battery Power:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_power') | float) }} W</font><br> Battery Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_total_battery_capacity_setting') | float) }} Ah</font><br> Cycle Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_total_charging_cycle_capacity') | float) }} Ah</font><br> Ave. Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jk_bms_jk_bms_002_average_cell_voltage') | float) }} V</font><br> Balance Cur.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_balancing_current') | float) }} A</font><br> Battery T1:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_jk_bms_002_temperature_sensor_1') | float) }} °F</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_current') | float) }} A</font></b><br> Remain Battery:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_jk_bms_002_state_of_charge') | float) }} %</font><br> Remain Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jk_bms_jk_bms_002_capacity_remaining') | float) }} Ah</font><br> Cycle Count:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jk_bms_jk_bms_002_charging_cycles') }}</font><br> Delta Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jk_bms_jk_bms_002_delta_cell_voltage') | float) }} V</font><br> MOS Temp.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_jk_bms_002_power_tube_temperature') | float) }} °F</font><br> Battery T2:&nbsp;&nbsp;<font color=#41CD52>{{ '%.1f' | format(states('sensor.jk_bms_jk_bms_002_temperature_sensor_2') | float) }} °F</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Cells"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Max: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_jk_bms_002_max_cell_voltage') | float) }} V</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Avg: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_jk_bms_002_average_cell_voltage') | float) }} V</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Min: <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jk_bms_jk_bms_002_min_cell_voltage') | float) }} V</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center> {% for i in range(1, 9) %} {{ '%02d' | format(i) }}.&nbsp;&nbsp;&nbsp; {% set cell_voltage = states('sensor.jk_bms_002_cell_voltage_' ~ i) %} {% if states('sensor.jk_bms_jk_bms_002_max_voltage_cell') == i|string %}\n  <font color=\"#3090C7\">{{ '%.3f' | format(cell_voltage | float) }} V</font>\n{% elif states('sensor.jk_bms_jk_bms_002_min_voltage_cell') == i|string %}\n  <font color=\"red\">{{ '%.3f' | format(cell_voltage | float) }} V</font>\n{% else %}\n  {{ '%.3f' | format(cell_voltage | float) }} V\n{% endif %}<br> {% endfor %}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7>JBD-001</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jbd_bms_001_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "JDB-001 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jbd_bms_001_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jbd_bms_001_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jbd_bms_001_charging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jbd_bms_001_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jbd_bms_001_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jbd_bms_001_discharging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('binary_sensor.jbd_bms_001_balancing') == 'on' %} <font color=#41CD52>{{ states('binary_sensor.jbd_bms_001_balancing') | upper }}</font> {% else %} <font color=red>{{ states('binary_sensor.jbd_bms_001_balancing') | upper }}</font> {% endif %} "
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jbd_bms_001_total_voltage') | float) }} V</font></b><br> Battery Power:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_power') | float) }} W</font><br> Battery Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_nominal_capacity') | float) }} Ah</font><br> Cycle Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_001_charging_capacity') }} Ah</font><br> Ave. Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jbd_bms_001_average_cell_voltage') | float) }} V</font><br> Balance Cur.:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_001_balancing_current') }} A</font><br> Battery T1:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_temperature_1') | float) }} °F</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jbd_bms_001_current') | float) }} A</font></b><br> Remain Battery:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_state_of_charge') | float) }} %</font><br> Remain Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_capacity_remaining') | float) }} Ah</font><br> Cycle Count:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_001_charging_cycles') }}</font><br> Delta Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jbd_bms_001_delta_cell_voltage') | float) }} V</font><br> MOS Temp.:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_') }} °F</font><br> Battery T2:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_001_temperature_2') | float)  }} °F</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Cells"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Max:{% if states('sensor.jbd_bms_001_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_001_max') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_max_cell_voltage') | float) }} V {% endif %} <br>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Avg:{% if states('sensor.jbd_bms_001_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_001_average_cell_voltage') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_average_cell_voltage') | float) }} V {% endif %} <br>  "
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Min:{% if states('sensor.jbd_bms_001_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_001_min_cell_voltage') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_min_cell_voltage') | float) }} V {% endif %} <br>        "
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>01.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_1') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '1' %}  <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_1') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_1') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_res') }} Ω <br> 02.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '2' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_2') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '2' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_2') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_2') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_2') }} Ω <br> 03.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '3' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_3') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '3' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_3') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_3') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_3') }} Ω <br> 04.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '4' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_4') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '4' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_4') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_4') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_4') }} Ω <br> 05.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_max_voltage_cell') == '5' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_001_cell_voltage_5') }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '5' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_5') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_5') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_5') }} Ω <br> 06.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '6' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_6') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_celle') == '6' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_6' | float)) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_6') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_6') }} Ω <br> 07.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '7' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_7') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '7' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_7') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_7') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_7') }} Ω <br> 08.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_001_max_voltage_cell') == '8' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_8') | float) }} V</font> {% elif states('sensor.jbd_bms_001_min_voltage_cell') == '8' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_8') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_001_cell_voltage_8') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_001_cell_resistance_8') }} Ω <br></center>"
                    }
                  ]
                }
              ]
            },
            {
              "type": "custom:stack-in-card",
              "keep": {
                "margin": false,
                "box_shadow": false,
                "background": false
              },
              "cards": [
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#3090C7>JBD-002</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "gauge",
                      "entity": "sensor.jbd_bms_002_state_of_charge",
                      "needle": true,
                      "severity": {
                        "green": 66,
                        "yellow": 33,
                        "red": 0
                      },
                      "name": "JDB-002 SoC"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>Charge:&nbsp;<b>{% if states('switch.jbd_bms_002_charging') == 'on' %} <font color=#41CD52>{{ states('switch.jbd_bms_002_charging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jbd_bms_002_charging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Discharge:&nbsp;<b> {% if states('switch.jbd_bms_002_discharging') == 'on' %} <font color=#41CD52>{{ states('switch.jbd_bms_002_discharging') | upper }}</font> {% else %} <font color=red>{{ states('switch.jbd_bms_002_discharging') | upper }}</font> {% endif %} "
                    },
                    {
                      "type": "markdown",
                      "content": "<center>Balance:&nbsp;<b> {% if states('binary_sensor.jbd_bms_002_balancing') == 'on' %} <font color=#41CD52>{{ states('binary_sensor.jbd_bms_002_balancing') | upper }}</font> {% else %} <font color=red>{{ states('binary_sensor.jbd_bms_002_balancing') | upper }}</font> {% endif %} "
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 2,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jbd_bms_002_total_voltage') | float) }} V</font></b><br> Battery Power:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_power') | float) }} W</font><br> Battery Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_nominal_capacity') | float) }} Ah</font><br> Cycle Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_002_charging_capacity') }} Ah</font><br> Ave. Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jbd_bms_002_average_cell_voltage') | float) }} V</font><br> Balance Cur.:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_002_balancing_current') }} A</font><br> Battery T1:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_temperature_1') | float) }} °F</font>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b><font color=#41CD52 size=6>{{ '%.2f' | format(states('sensor.jbd_bms_002_current') | float) }} A</font></b><br> Remain Battery:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_state_of_charge') | float) }} %</font><br> Remain Capacity:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_capacity_remaining') | float) }} Ah</font><br> Cycle Count:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_002_charging_cycles') }}</font><br> Delta Cell Vol.:&nbsp;&nbsp;<font color=#41CD52>{{ '%.3f' | format(states('sensor.jbd_bms_002_delta_cell_voltage') | float) }} V</font><br> MOS Temp.:&nbsp;&nbsp;<font color=#41CD52>{{ states('sensor.jbd_bms_') }} °F</font><br> Battery T2:&nbsp;&nbsp;<font color=#41CD52>{{ '%.2f' | format(states('sensor.jbd_bms_002_temperature_2') | float)  }} °F</font>"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Cells"
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 3,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center><b>Max:{% if states('sensor.jbd_bms_002_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_002_max') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_max_cell_voltage') | float) }} V {% endif %} <br>"
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Avg:{% if states('sensor.jbd_bms_002_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_002_average_cell_voltage') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_average_cell_voltage') | float) }} V {% endif %} <br>  "
                    },
                    {
                      "type": "markdown",
                      "content": "<center><b>Min:{% if states('sensor.jbd_bms_002_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_002_min_cell_voltage') }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_min_cell_voltage') | float) }} V {% endif %} <br>        "
                    }
                  ]
                },
                {
                  "type": "grid",
                  "square": false,
                  "columns": 1,
                  "cards": [
                    {
                      "type": "markdown",
                      "content": "<center>01.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '1' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_1') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '1' %}  <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_1') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_1') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_res') }} Ω <br> 02.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '2' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_2') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '2' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_2') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_2') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_2') }} Ω <br> 03.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '3' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_3') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '3' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_3') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_3') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_3') }} Ω <br> 04.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '4' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_4') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '4' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_4') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_4') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_4') }} Ω <br> 05.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_max_voltage_cell') == '5' %}  <font color=\"#3090C7\">{{ states('sensor.jbd_bms_002_cell_voltage_5') }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '5' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_5') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_5') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_5') }} Ω <br> 06.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '6' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_6') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_celle') == '6' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_6' | float)) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_6') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_6') }} Ω <br> 07.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '7' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_7') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '7' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_7') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_7') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_7') }} Ω <br> 08.&nbsp;&nbsp;&nbsp; {% if states('sensor.jbd_bms_002_max_voltage_cell') == '8' %}  <font color=\"#3090C7\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_8') | float) }} V</font> {% elif states('sensor.jbd_bms_002_min_voltage_cell') == '8' %} <font color=\"red\">{{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_8') | float) }} V</font> {% else %} {{ '%.3f' | format(states('sensor.jbd_bms_002_cell_voltage_8') | float) }} V {% endif %} &nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp; {{ states('sensor.jbd_bms_002_cell_resistance_8') }} Ω <br></center>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "masonry",
          "path": "",
          "icon": "mdi:solar-power",
          "cards": [
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.mppt001_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.mppt001_operation_mode",
                  "name": "Operation Mode"
                },
                {
                  "entity": "sensor.mppt001_power",
                  "name": "Power"
                },
                {
                  "entity": "sensor.mppt001_voltage",
                  "name": "Voltage"
                },
                {
                  "entity": "sensor.mppt001_yield_today",
                  "name": "Yield Today"
                }
              ],
              "title": "MPPT001"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_auxilliary_input_mode",
                  "name": "Auxilliary Input Mode"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_battery",
                  "name": "Battery"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_time_remaining",
                  "name": "Time remaining"
                },
                {
                  "entity": "sensor.smartshunt_hq2510vp7nv_voltage",
                  "name": "Voltage"
                }
              ],
              "title": "SmartShunt 300A"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.smartsolar_hq2137y2q9u_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.smartsolar_hq2137y2q9u_operation_mode",
                  "name": "Operation Mode"
                },
                {
                  "entity": "sensor.smartsolar_hq2137y2q9u_power",
                  "name": "Power"
                },
                {
                  "entity": "sensor.smartsolar_hq2137y2q9u_voltage",
                  "name": "Voltage"
                },
                {
                  "entity": "sensor.smartsolar_hq2137y2q9u_yield_today",
                  "name": "Yield Today"
                }
              ],
              "title": "MPPT01"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.smartsolar_hq2129nefcy_current",
                  "name": "Current"
                },
                {
                  "entity": "sensor.smartsolar_hq2129nefcy_operation_mode",
                  "name": "Operation Mode"
                },
                {
                  "entity": "sensor.smartsolar_hq2129nefcy_power",
                  "name": "Power"
                },
                {
                  "entity": "sensor.smartsolar_hq2129nefcy_voltage",
                  "name": "Voltage"
                },
                {
                  "entity": "sensor.smartsolar_hq2129nefcy_yield_today",
                  "name": "Yield Today"
                }
              ],
              "title": "MPPT-Toolbox"
            }
          ],
          "title": "Solar",
          "subview": false
        },
        {
          "title": "WLED",
          "path": "wled",
          "icon": "mdi:led-outline",
          "badges": [],
          "cards": [
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "light.wled_roof"
                },
                {
                  "entity": "number.wled_roof_intensity"
                },
                {
                  "entity": "select.wled_roof_preset"
                },
                {
                  "entity": "sensor.wled_roof_led_count"
                },
                {
                  "entity": "sensor.wled_roof_estimated_current"
                },
                {
                  "entity": "sensor.wled_roof_ip"
                }
              ],
              "title": "WLED-roof"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "light.wled_bof"
                },
                {
                  "entity": "number.wled_bof_intensity"
                },
                {
                  "entity": "select.wled_bof_preset"
                },
                {
                  "entity": "sensor.wled_bof_led_count"
                },
                {
                  "entity": "sensor.wled_bof_estimated_current"
                },
                {
                  "entity": "sensor.wled_bof_ip"
                }
              ],
              "title": "WLED-bof"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "light.wled_blv"
                },
                {
                  "entity": "number.wled_blv_intensity"
                },
                {
                  "entity": "select.wled_blv_preset"
                },
                {
                  "entity": "sensor.wled_blv_led_count"
                },
                {
                  "entity": "sensor.wled_blv_estimated_current"
                },
                {
                  "entity": "sensor.wled_blv_ip"
                }
              ],
              "title": "WLED-blv"
            },
            {
              "type": "gauge",
              "entity": "sensor.wled_roof_estimated_current",
              "max": 18000,
              "needle": true,
              "name": "WLED-roof Current",
              "unit": "mA",
              "min": 0,
              "severity": {
                "green": 0,
                "yellow": 6000,
                "red": 12000
              }
            },
            {
              "type": "gauge",
              "entity": "sensor.wled_bof_estimated_current",
              "name": "WLED-bof",
              "unit": "mA",
              "min": 0,
              "max": 10000,
              "needle": true,
              "severity": {
                "green": 0,
                "yellow": 3300,
                "red": 6600
              }
            },
            {
              "type": "gauge",
              "entity": "sensor.wled_blv_estimated_current",
              "unit": "mA",
              "min": 0,
              "max": 10000,
              "needle": true,
              "name": "WLED-blv Current",
              "severity": {
                "green": 0,
                "yellow": 3300,
                "red": 6600
              }
            }
          ]
        },
        {
          "title": "UPS",
          "path": "ups",
          "icon": "mdi:alarm-light-outline",
          "badges": [],
          "cards": [
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "gauge",
                  "entity": "sensor.apc_001_battery_charge",
                  "needle": true,
                  "severity": {
                    "green": 66,
                    "yellow": 33,
                    "red": 0
                  },
                  "name": "APC-001 Battery Percentage"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.apc_001_status",
                      "name": "Status"
                    },
                    {
                      "entity": "sensor.apc_001_battery_charge",
                      "name": "Battery Percentage"
                    },
                    {
                      "entity": "sensor.apc_001_load",
                      "name": "Load Percentage"
                    },
                    {
                      "entity": "sensor.apc_001_input_voltage",
                      "name": "Input Voltage"
                    }
                  ],
                  "title": "APC Back-UPS XS 1500G - 1",
                  "state_color": false
                }
              ]
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "gauge",
                  "entity": "sensor.apc_002_battery_charge",
                  "needle": true,
                  "severity": {
                    "green": 66,
                    "yellow": 33,
                    "red": 0
                  },
                  "name": "APC-002 Battery Percentage"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.apc_002_status",
                      "name": "Status"
                    },
                    {
                      "entity": "sensor.apc_002_battery_charge",
                      "name": "Battery Percentage"
                    },
                    {
                      "entity": "sensor.apc_002_load",
                      "name": "Load Percentage"
                    },
                    {
                      "entity": "sensor.apc_002_input_voltage",
                      "name": "Input Voltage"
                    }
                  ],
                  "title": "APC Back-UPS XS 1500G - 2"
                }
              ]
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "gauge",
                  "entity": "sensor.apc_003_battery_charge",
                  "needle": true,
                  "severity": {
                    "green": 66,
                    "yellow": 33,
                    "red": 0
                  },
                  "name": "APC-003 Battery Percentage"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.apc_003_status",
                      "name": "Status"
                    },
                    {
                      "entity": "sensor.apc_003_battery_charge",
                      "name": "Battery Percentage"
                    },
                    {
                      "entity": "sensor.apc_003_load",
                      "name": "Load Percentage"
                    },
                    {
                      "entity": "sensor.apc_003_input_voltage",
                      "name": "Input Voltage"
                    }
                  ],
                  "title": "APC Back-UPS BX 1000G",
                  "state_color": false
                }
              ]
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "gauge",
                  "entity": "sensor.apc_004_battery_charge",
                  "needle": true,
                  "severity": {
                    "green": 66,
                    "yellow": 33,
                    "red": 0
                  },
                  "name": "APC-004 Battery Percentage"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.apc_004_status",
                      "name": "Status"
                    },
                    {
                      "entity": "sensor.apc_004_battery_charge",
                      "name": "Battery Percentage"
                    },
                    {
                      "entity": "sensor.apc_004_load",
                      "name": "Load Percentage"
                    },
                    {
                      "entity": "sensor.apc_004_input_voltage",
                      "name": "Input Voltage"
                    }
                  ],
                  "title": "APC Back-UPS RS 1500 - 1",
                  "state_color": false
                }
              ]
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "gauge",
                  "entity": "sensor.apc_005_battery_charge",
                  "needle": true,
                  "severity": {
                    "green": 66,
                    "yellow": 33,
                    "red": 0
                  },
                  "name": "APC-005 Battery Percentage"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.apc_005_status",
                      "name": "Status"
                    },
                    {
                      "entity": "sensor.apc_005_battery_charge",
                      "name": "Battery Percentage"
                    },
                    {
                      "entity": "sensor.apc_005_load",
                      "name": "Load Percentage"
                    },
                    {
                      "entity": "sensor.apc_005_input_voltage",
                      "name": "Input Voltage"
                    }
                  ],
                  "title": "APC Back-UPS RS 1500 - 2",
                  "state_color": false
                }
              ]
            }
          ]
        },
        {
          "title": "BMS Settings",
          "path": "jk-bms-settings",
          "icon": "mdi:battery-outline",
          "badges": [],
          "cards": [
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.jk_bms_001_average_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_balance_starting_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_balance_trigger_voltage"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_001_balancer"
                },
                {
                  "entity": "binary_sensor.jk_bms_001_balancing"
                },
                {
                  "entity": "sensor.jk_bms_001_balancing_current"
                },
                {
                  "entity": "sensor.jk_bms_001_capacity_remaining"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_cell_count"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_1"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_2"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_3"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_4"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_5"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_6"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_7"
                },
                {
                  "entity": "sensor.jk_bms_001_cell_voltage_8"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_cell_voltage_overvoltage_protection"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_cell_voltage_overvoltage_recovery"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_cell_voltage_undervoltage_protection"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_cell_voltage_undervoltage_recovery"
                },
                {
                  "entity": "binary_sensor.jk_bms_001_charging"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_001_charging"
                },
                {
                  "entity": "sensor.jk_bms_001_charging_cycles"
                },
                {
                  "entity": "sensor.jk_bms_001_charging_power"
                },
                {
                  "entity": "sensor.jk_bms_001_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_current_calibration"
                },
                {
                  "entity": "sensor.jk_bms_001_delta_cell_voltage"
                },
                {
                  "entity": "binary_sensor.jk_bms_001_discharging"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_001_discharging"
                },
                {
                  "entity": "sensor.jk_bms_001_discharging_power"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_001_enable_bluetooth_connection"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_001_errors"
                },
                {
                  "entity": "sensor.jk_bms_001_errors_bitmask"
                },
                {
                  "entity": "sensor.jk_bms_001_heating_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_max_balance_current"
                },
                {
                  "entity": "sensor.jk_bms_001_max_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_max_charge_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_max_discharge_current"
                },
                {
                  "entity": "sensor.jk_bms_001_max_voltage_cell"
                },
                {
                  "entity": "sensor.jk_bms_001_min_cell_voltage"
                },
                {
                  "entity": "sensor.jk_bms_001_min_voltage_cell"
                },
                {
                  "entity": "binary_sensor.jk_bms_001_online_status"
                },
                {
                  "entity": "sensor.jk_bms_001_power"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_power_off_voltage"
                },
                {
                  "entity": "sensor.jk_bms_001_power_tube_temperature"
                },
                {
                  "entity": "button.jk_bms_jk_bms_001_retrieve_device_info"
                },
                {
                  "entity": "button.jk_bms_jk_bms_001_retrieve_settings"
                },
                {
                  "entity": "sensor.jk_bms_001_state_of_charge"
                },
                {
                  "entity": "sensor.jk_bms_001_temperature_sensor_1"
                },
                {
                  "entity": "sensor.jk_bms_001_temperature_sensor_2"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_total_battery_capacity"
                },
                {
                  "entity": "sensor.jk_bms_001_total_battery_capacity_setting"
                },
                {
                  "entity": "sensor.jk_bms_001_total_charging_cycle_capacity"
                },
                {
                  "entity": "sensor.jk_bms_001_total_runtime"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_001_total_runtime_formatted"
                },
                {
                  "entity": "sensor.jk_bms_001_total_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_001_voltage_calibration"
                }
              ],
              "title": "Batt-001"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.jk_bms_jk_bms_002_average_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_balance_starting_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_balance_trigger_voltage"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_002_balancer"
                },
                {
                  "entity": "binary_sensor.jk_bms_002_balancing"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_balancing_current"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_capacity_remaining"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_cell_count"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_1"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_2"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_3"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_4"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_5"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_6"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_7"
                },
                {
                  "entity": "sensor.jk_bms_002_cell_voltage_8"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_cell_voltage_overvoltage_protection"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_cell_voltage_overvoltage_recovery"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_cell_voltage_undervoltage_protection"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_cell_voltage_undervoltage_recovery"
                },
                {
                  "entity": "binary_sensor.jk_bms_002_charging"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_002_charging"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_charging_cycles"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_charging_power"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_current_calibration"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_delta_cell_voltage"
                },
                {
                  "entity": "binary_sensor.jk_bms_002_discharging"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_002_discharging"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_discharging_power"
                },
                {
                  "entity": "switch.jk_bms_jk_bms_002_enable_bluetooth_connection"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_errors"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_errors_bitmask"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_heating_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_max_balance_current"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_max_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_max_charge_current"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_max_discharge_current"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_max_voltage_cell"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_min_cell_voltage"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_min_voltage_cell"
                },
                {
                  "entity": "binary_sensor.jk_bms_002_online_status"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_power"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_power_off_voltage"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_power_tube_temperature"
                },
                {
                  "entity": "button.jk_bms_jk_bms_002_retrieve_device_info"
                },
                {
                  "entity": "button.jk_bms_jk_bms_002_retrieve_settings"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_state_of_charge"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_temperature_sensor_1"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_temperature_sensor_2"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_total_battery_capacity"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_total_battery_capacity_setting"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_total_charging_cycle_capacity"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_total_runtime"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_total_runtime_formatted"
                },
                {
                  "entity": "sensor.jk_bms_jk_bms_002_total_voltage"
                },
                {
                  "entity": "number.jk_bms_jk_bms_002_voltage_calibration"
                }
              ],
              "title": "Batt-002"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.jk_bms_003_average_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_003_balance_starting_voltage"
                },
                {
                  "entity": "number.jk_bms_003_balance_trigger_voltage"
                },
                {
                  "entity": "switch.jk_bms_003_balancer"
                },
                {
                  "entity": "binary_sensor.jk_bms_003_balancing"
                },
                {
                  "entity": "sensor.jk_bms_003_balancing_current"
                },
                {
                  "entity": "sensor.jk_bms_003_capacity_remaining"
                },
                {
                  "entity": "number.jk_bms_003_cell_count"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_1"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_2"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_3"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_4"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_5"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_6"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_7"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_resistance_8"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_1"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_2"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_3"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_4"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_5"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_6"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_7"
                },
                {
                  "entity": "sensor.jk_bms_003_cell_voltage_8"
                },
                {
                  "entity": "number.jk_bms_003_cell_voltage_overvoltage_protection"
                },
                {
                  "entity": "number.jk_bms_003_cell_voltage_overvoltage_recovery"
                },
                {
                  "entity": "number.jk_bms_003_cell_voltage_undervoltage_protection"
                },
                {
                  "entity": "number.jk_bms_003_cell_voltage_undervoltage_recovery"
                },
                {
                  "entity": "binary_sensor.jk_bms_003_charging"
                },
                {
                  "entity": "switch.jk_bms_003_charging"
                },
                {
                  "entity": "sensor.jk_bms_003_charging_cycles"
                },
                {
                  "entity": "sensor.jk_bms_003_charging_power"
                },
                {
                  "entity": "sensor.jk_bms_003_current"
                },
                {
                  "entity": "number.jk_bms_003_current_calibration"
                },
                {
                  "entity": "sensor.jk_bms_003_delta_cell_voltage"
                },
                {
                  "entity": "binary_sensor.jk_bms_003_discharging"
                },
                {
                  "entity": "switch.jk_bms_003_discharging"
                },
                {
                  "entity": "sensor.jk_bms_003_discharging_power"
                },
                {
                  "entity": "switch.jk_bms_003_enable_bluetooth_connection"
                },
                {
                  "entity": "sensor.jk_bms_003_errors"
                },
                {
                  "entity": "sensor.jk_bms_003_errors_bitmask"
                },
                {
                  "entity": "sensor.jk_bms_003_heating_current"
                },
                {
                  "entity": "number.jk_bms_003_max_balance_current"
                },
                {
                  "entity": "sensor.jk_bms_003_max_cell_voltage"
                },
                {
                  "entity": "number.jk_bms_003_max_charge_current"
                },
                {
                  "entity": "number.jk_bms_003_max_discharge_current"
                },
                {
                  "entity": "sensor.jk_bms_003_max_voltage_cell"
                },
                {
                  "entity": "sensor.jk_bms_003_min_cell_voltage"
                },
                {
                  "entity": "sensor.jk_bms_003_min_voltage_cell"
                },
                {
                  "entity": "binary_sensor.jk_bms_003_online_status"
                },
                {
                  "entity": "sensor.jk_bms_003_power"
                },
                {
                  "entity": "number.jk_bms_003_power_off_voltage"
                },
                {
                  "entity": "sensor.jk_bms_003_power_tube_temperature"
                },
                {
                  "entity": "button.jk_bms_003_retrieve_device_info"
                },
                {
                  "entity": "button.jk_bms_003_retrieve_settings"
                },
                {
                  "entity": "sensor.jk_bms_003_state_of_charge"
                },
                {
                  "entity": "sensor.jk_bms_003_temperature_sensor_1"
                },
                {
                  "entity": "sensor.jk_bms_003_temperature_sensor_2"
                },
                {
                  "entity": "number.jk_bms_003_total_battery_capacity"
                },
                {
                  "entity": "sensor.jk_bms_003_total_battery_capacity_setting"
                },
                {
                  "entity": "sensor.jk_bms_003_total_charging_cycle_capacity"
                },
                {
                  "entity": "sensor.jk_bms_003_total_runtime"
                },
                {
                  "entity": "sensor.jk_bms_003_total_runtime_formatted"
                },
                {
                  "entity": "sensor.jk_bms_003_total_voltage"
                },
                {
                  "entity": "number.jk_bms_003_voltage_calibration"
                }
              ],
              "title": "Batt-003"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.jbd_bms_001_average_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_001_balancer_status_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_001_battery_strings"
                },
                {
                  "entity": "sensor.jbd_bms_001_capacity_remaining"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_1"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_2"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_3"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_4"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_5"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_5"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_6"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_7"
                },
                {
                  "entity": "sensor.jbd_bms_001_cell_voltage_8"
                },
                {
                  "entity": "sensor.jbd_bms_001_charging_cycles"
                },
                {
                  "entity": "sensor.jbd_bms_001_charging_power"
                },
                {
                  "entity": "sensor.jbd_bms_001_current"
                },
                {
                  "entity": "sensor.jbd_bms_001_delta_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_001_discharging_power"
                },
                {
                  "entity": "sensor.jbd_bms_001_errors_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_001_max_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_001_max_voltage_cell"
                },
                {
                  "entity": "sensor.jbd_bms_001_min_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_001_min_voltage_cell"
                },
                {
                  "entity": "sensor.jbd_bms_001_nominal_capacity"
                },
                {
                  "entity": "sensor.jbd_bms_001_operation_status_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_001_power"
                },
                {
                  "entity": "sensor.jbd_bms_001_software_version"
                },
                {
                  "entity": "sensor.jbd_bms_001_state_of_charge"
                },
                {
                  "entity": "sensor.jbd_bms_001_temperature_1"
                },
                {
                  "entity": "sensor.jbd_bms_001_temperature_2"
                },
                {
                  "entity": "sensor.jbd_bms_001_total_voltage"
                },
                {
                  "entity": "binary_sensor.jbd_bms_001_balancing"
                },
                {
                  "entity": "binary_sensor.jbd_bms_001_charging"
                },
                {
                  "entity": "switch.jbd_bms_001_charging"
                },
                {
                  "entity": "sensor.jbd_bms_001_device_model"
                },
                {
                  "entity": "binary_sensor.jbd_bms_001_discharging"
                },
                {
                  "entity": "switch.jbd_bms_001_discharging"
                },
                {
                  "entity": "switch.jbd_bms_001_enable_bluetooth_connection"
                },
                {
                  "entity": "sensor.jbd_bms_001_errors"
                }
              ],
              "title": "JBD-001"
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "sensor.jbd_bms_002_average_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_002_balancer_status_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_002_battery_strings"
                },
                {
                  "entity": "sensor.jbd_bms_002_capacity_remaining"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_1"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_2"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_3"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_4"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_5"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_5"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_6"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_7"
                },
                {
                  "entity": "sensor.jbd_bms_002_cell_voltage_8"
                },
                {
                  "entity": "sensor.jbd_bms_002_charging_cycles"
                },
                {
                  "entity": "sensor.jbd_bms_002_charging_power"
                },
                {
                  "entity": "sensor.jbd_bms_002_current"
                },
                {
                  "entity": "sensor.jbd_bms_002_delta_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_002_discharging_power"
                },
                {
                  "entity": "sensor.jbd_bms_002_errors_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_002_max_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_002_max_voltage_cell"
                },
                {
                  "entity": "sensor.jbd_bms_002_min_cell_voltage"
                },
                {
                  "entity": "sensor.jbd_bms_002_min_voltage_cell"
                },
                {
                  "entity": "sensor.jbd_bms_002_nominal_capacity"
                },
                {
                  "entity": "sensor.jbd_bms_002_operation_status_bitmask"
                },
                {
                  "entity": "sensor.jbd_bms_002_power"
                },
                {
                  "entity": "sensor.jbd_bms_002_software_version"
                },
                {
                  "entity": "sensor.jbd_bms_002_state_of_charge"
                },
                {
                  "entity": "sensor.jbd_bms_002_temperature_1"
                },
                {
                  "entity": "sensor.jbd_bms_002_temperature_2"
                },
                {
                  "entity": "sensor.jbd_bms_002_total_voltage"
                },
                {
                  "entity": "binary_sensor.jbd_bms_002_balancing"
                },
                {
                  "entity": "binary_sensor.jbd_bms_002_charging"
                },
                {
                  "entity": "switch.jbd_bms_002_charging"
                },
                {
                  "entity": "sensor.jbd_bms_002_device_model"
                },
                {
                  "entity": "binary_sensor.jbd_bms_002_discharging"
                },
                {
                  "entity": "switch.jbd_bms_002_discharging"
                },
                {
                  "entity": "switch.jbd_bms_002_enable_bluetooth_connection"
                },
                {
                  "entity": "sensor.jbd_bms_002_errors"
                }
              ],
              "title": "JBD-002"
            }
          ],
          "type": "masonry"
        },
        {
          "title": "Weather",
          "path": "weather",
          "icon": "mdi:weather-cloudy",
          "badges": [],
          "cards": [
            {
              "type": "custom:mini-graph-card",
              "line_color": "green",
              "entities": [
                {
                  "entity": "sensor.temperature"
                }
              ],
              "hours_to_show": 24,
              "refresh_interval": 0,
              "smoothing": true,
              "name": "External Temperature"
            },
            {
              "type": "custom:compass-card",
              "indicator_sensors": [
                {
                  "sensor": "sensor.wind_direction",
                  "indicator": {
                    "image": "arrow_outward"
                  }
                }
              ],
              "value_sensors": [
                {
                  "sensor": "sensor.wind_speed"
                }
              ],
              "header": {
                "title": {
                  "value": "Wind Information"
                }
              },
              "compass": {
                "north": {
                  "show": false
                }
              },
              "language": "en"
            },
            {
              "type": "custom:mini-graph-card",
              "line_color": "chartreuse",
              "entities": [
                {
                  "entity": "sensor.barometric_pressure",
                  "unit": "inHg",
                  "hours_to_show": 24,
                  "refresh_interval": 0,
                  "smoothing": true,
                  "name": "Pressure"
                }
              ]
            },
            {
              "type": "custom:mini-graph-card",
              "line_color": "blue",
              "entities": [
                {
                  "entity": "sensor.light_level",
                  "unit": "lx",
                  "hours_to_show": 24,
                  "refresh_interval": 0,
                  "smoothing": true,
                  "name": "Light"
                }
              ]
            },
            {
              "type": "custom:mini-graph-card",
              "line_color": "pink",
              "entities": [
                {
                  "entity": "sensor.relative_humidity",
                  "unit": "%",
                  "hours_to_show": 24,
                  "refresh_interval": 0,
                  "smoothing": true,
                  "name": "Humidity"
                }
              ]
            },
            {
              "type": "custom:mini-graph-card",
              "line_color": "yellow",
              "entities": [
                {
                  "entity": "sensor.rainfall_24h",
                  "unit": "in",
                  "hours_to_show": 24,
                  "refresh_interval": 0,
                  "smoothing": true,
                  "name": "Rain"
                }
              ]
            },
            {
              "type": "custom:mini-graph-card",
              "line_color": "red",
              "entities": [
                {
                  "entity": "sensor.case_temp_fahrenheit",
                  "hours_to_show": 24,
                  "refresh_interval": 0,
                  "smoothing": true,
                  "name": "Case Temperature"
                }
              ]
            },
            {
              "type": "gauge",
              "entity": "sensor.battery_voltage",
              "name": "Battery level",
              "unit": "V",
              "needle": true,
              "min": 0,
              "max": 4.2,
              "segments": [
                {
                  "from": 0,
                  "color": "red"
                },
                {
                  "from": 3.2,
                  "color": "yellow"
                },
                {
                  "from": 3.6,
                  "color": "green"
                }
              ]
            }
          ]
        }
      ]
    }
  }
}